name: Publish CZERTAINLY Docker image

on:
  push:
    branches: [main]
    tags:
      - '*'
  workflow_dispatch:

jobs:
  push_to_registry:
    name: Push Docker images
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      packages: read
      security-events: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v5

      - name: Install Cosign
        uses: sigstore/cosign-installer@faadad0cce49287aee09b3a48701e75088a2c6ad # v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3

      - name: Log in to CZERTAINLY Docker Hub
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3
        with:
          username: ${{ secrets.DOCKER_HUB_CZERTAINLY_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_CZERTAINLY_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5
        with:
          images: |
            czertainly/czertainly-software-cryptography-provider
          tags: |
            type=ref,event=tag
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/') }}
            type=raw,value=develop-latest
            type=sha,prefix=develop-,format=long

      - name: Test build Docker image
        id: build-and-load
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6
        with:
          context: .
          platforms: linux/amd64
          file: ./Dockerfile
          # Build only the host architecture for the pre-scan build;
          # --load works only when a single platform is produced.
          load: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Select tag for scanning
        id: tag
        run: |
          FIRST_TAG="$(echo "${{ steps.meta.outputs.tags }}" | head -n 1)"
          echo "value=$FIRST_TAG" >> "$GITHUB_OUTPUT"

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@b6643a29fecd7f34b3597bc6acb0a98b03d33ff8 # v0.33.1
        with:
          image-ref: ${{ steps.tag.outputs.value }}
          format: json
          output: trivy-report.json
          exit-code: 0

      - name: Upload vulnerability report
        uses: actions/upload-artifact@v5
        with:
          name: trivy-report
          path: trivy-report.json

      - name: Fail build on vulnerabilities
        uses: aquasecurity/trivy-action@b6643a29fecd7f34b3597bc6acb0a98b03d33ff8 # v0.33.1
        with:
          image-ref: ${{ steps.tag.outputs.value }}
          trivy-config: config/trivy.yaml
          skip-setup-trivy: true

      - name: Build and push Docker image
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6
        id: build-and-push
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          file: ./Dockerfile
          push: true
          provenance: mode=max
          sbom: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Sign images with a key
        run: |
          images=""
          for tag in ${TAGS}; do
            images+="${tag}@${DIGEST} "
          done
          cosign sign --yes --key env://COSIGN_PRIVATE_KEY ${images}
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}

      - name: Push README to CZERTAINLY Docker Hub
        uses: christian-korneck/update-container-description-action@cf2977b0f3d189227f140ecbc6402c5a042b34e4
        env:
          DOCKER_USER: ${{ secrets.DOCKER_HUB_CZERTAINLY_USERNAME }}
          DOCKER_PASS: ${{ secrets.DOCKER_HUB_CZERTAINLY_PASSWORD }}
        with:
          destination_container_repo: czertainly/czertainly-software-cryptography-provider
          provider: dockerhub
